-- Initialize variables
local trigger_bot_enabled = false
local aimbot_enabled = false
local lock_through_walls = false
local tracers_and_boxes_enabled = false
local troll_mode_enabled = false
local fly_enabled = false
local fly_speed = 1
local noclip_enabled = false
local teleport_enabled = false
local tracer_color = Color3.new(1, 0, 0) -- Default color
local minimized = false
local speed_hack_enabled = false
local auto_reload_enabled = false
local silent_aim_enabled = false
local voice_chat_enabled = false

-- GUI for toggles and color slider
local gui = Instance.new("ScreenGui")
gui.IgnoreGuiInset = true -- For mobile compatibility
gui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Main frame
local frame = Instance.new("Frame")
frame.Size = UDim2.new(0.9, 0, 0.9, 0) -- Adjusted size to fit mobile screen better
frame.Position = UDim2.new(0.05, 0, 0.05, 0) -- Adjusted position to fit mobile screen better
frame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
frame.BorderSizePixel = 2
frame.BorderColor3 = Color3.new(1, 1, 1)
frame.Active = true -- Allow input detection
frame.Parent = gui

-- Function to handle frame dragging
local function enableDragging()
    local UserInputService = game:GetService("UserInputService")
    local dragging
    local dragInput
    local dragStart
    local startPos

    local function update(input)
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position

            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
            dragInput = input
        end
    end)

    UserInputService.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            update(input)
        end
    end)
end

-- Enable dragging for the frame
enableDragging()

-- Function to create a toggle button
local function createToggleButton(text, position, callback)
    local toggleButton = Instance.new("TextButton") -- Changed to TextButton for better touch interaction
    toggleButton.Size = UDim2.new(0.9, 0, 0, 30)
    toggleButton.Position = position
    toggleButton.BackgroundColor3 = Color3.new(0.4, 0.4, 0.4)
    toggleButton.BorderSizePixel = 2
    toggleButton.BorderColor3 = Color3.new(1, 1, 1)
    toggleButton.TextColor3 = Color3.new(1, 1, 1)
    toggleButton.Text = text
    toggleButton.Font = Enum.Font.SourceSansBold
    toggleButton.TextSize = 16
    toggleButton.Parent = frame

    -- Touch input event
    toggleButton.MouseButton1Click:Connect(callback)
    -- Mouse input event (for compatibility)
    toggleButton.TouchTap:Connect(callback)
end

-- Create toggle buttons
createToggleButton("Trigger Bot", UDim2.new(0.05, 0, 0.05, 0), function()
    trigger_bot_enabled = not trigger_bot_enabled
    print("Trigger Bot " .. (trigger_bot_enabled and "enabled" or "disabled"))
end)

createToggleButton("Aimbot", UDim2.new(0.05, 0, 0.15, 0), function()
    aimbot_enabled = not aimbot_enabled
    print("Aimbot " .. (aimbot_enabled and "enabled" or "disabled"))
end)

-- Add more toggle buttons as needed

-- Function to continuously aim the aimbot at the nearest player's head while enabled
local function continuousAimbot()
    while aimbot_enabled do
        aimAtNearestPlayerHead()
        wait(0.1) -- Adjust this value for smoother aiming
    end
end

-- Start continuous aiming when aimbot is enabled
if aimbot_enabled then
    spawn(continuousAimbot)
end

-- Other functions and features...

-- Function to aim the aimbot at the nearest player's head, possibly through walls
local function aimAtNearestPlayerHead()
    -- Implement aimbot logic here
end